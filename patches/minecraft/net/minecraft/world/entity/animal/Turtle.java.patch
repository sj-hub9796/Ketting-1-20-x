--- a/net/minecraft/world/entity/animal/Turtle.java
+++ b/net/minecraft/world/entity/animal/Turtle.java
@@ -283,7 +_,9 @@
    protected void ageBoundaryReached() {
       super.ageBoundaryReached();
       if (!this.isBaby() && this.level().getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
+         this.forceDrops = true; // CraftBukkit
          this.spawnAtLocation(Items.SCUTE, 1);
+         this.forceDrops = false; // CraftBukkit
       }
 
    }
@@ -307,7 +_,9 @@
    }
 
    public void thunderHit(ServerLevel p_30140_, LightningBolt p_30141_) {
+      org.bukkit.craftbukkit.v1_20_R1.event.CraftEventFactory.entityDamage = p_30141_; // CraftBukkit
       this.hurt(this.damageSources().lightningBolt(), Float.MAX_VALUE);
+      org.bukkit.craftbukkit.v1_20_R1.event.CraftEventFactory.entityDamage = null; // CraftBukkit
    }
 
    static class TurtleBreedGoal extends BreedGoal {
@@ -340,7 +_,7 @@
          this.partner.resetLove();
          RandomSource randomsource = this.animal.getRandom();
          if (this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
-            this.level.addFreshEntity(new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), randomsource.nextInt(7) + 1));
+            this.level.addFreshEntity(new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), randomsource.nextInt(7) + 1, org.bukkit.entity.ExperienceOrb.SpawnReason.BREED, serverplayer)); // Paper
          }
 
       }
@@ -468,11 +_,13 @@
                this.turtle.setLayingEgg(true);
             } else if (this.turtle.layEggCounter > this.adjustedTickDelay(200)) {
                Level level = this.turtle.level();
-               level.playSound((Player)null, blockpos, SoundEvents.TURTLE_LAY_EGG, SoundSource.BLOCKS, 0.3F, 0.9F + level.random.nextFloat() * 0.2F);
-               BlockPos blockpos1 = this.blockPos.above();
-               BlockState blockstate = Blocks.TURTLE_EGG.defaultBlockState().setValue(TurtleEggBlock.EGGS, Integer.valueOf(this.turtle.random.nextInt(4) + 1));
-               level.setBlock(blockpos1, blockstate, 3);
-               level.gameEvent(GameEvent.BLOCK_PLACE, blockpos1, GameEvent.Context.of(this.turtle, blockstate));
+               if (org.bukkit.craftbukkit.v1_20_R1.event.CraftEventFactory.callEntityChangeBlockEvent(this.turtle, this.blockPos.above(), (BlockState) Blocks.TURTLE_EGG.defaultBlockState().setValue(TurtleEggBlock.EGGS, this.turtle.random.nextInt(4) + 1))) { // CraftBukkit
+                  level.playSound((Player) null, blockpos, SoundEvents.TURTLE_LAY_EGG, SoundSource.BLOCKS, 0.3F, 0.9F + level.random.nextFloat() * 0.2F);
+                  BlockPos blockpos1 = this.blockPos.above();
+                  BlockState blockstate = Blocks.TURTLE_EGG.defaultBlockState().setValue(TurtleEggBlock.EGGS, Integer.valueOf(this.turtle.random.nextInt(4) + 1));
+                  level.setBlock(blockpos1, blockstate, 3);
+                  level.gameEvent(GameEvent.BLOCK_PLACE, blockpos1, GameEvent.Context.of(this.turtle, blockstate));
+               } // CraftBukkit
                this.turtle.setHasEgg(false);
                this.turtle.setLayingEgg(false);
                this.turtle.setInLoveTime(600);
