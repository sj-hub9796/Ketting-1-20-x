--- a/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -136,6 +_,7 @@
    protected int gallopSoundCounter;
    @Nullable
    private UUID owner;
+   public int maxDomestication = 100; // CraftBukkit - store max domestication value
 
    protected AbstractHorse(EntityType<? extends AbstractHorse> p_30531_, Level p_30532_) {
       super(p_30531_, p_30532_);
@@ -312,7 +_,7 @@
 
    public void createInventory() {
       SimpleContainer simplecontainer = this.inventory;
-      this.inventory = new SimpleContainer(this.getInventorySize());
+      this.inventory = new SimpleContainer(this.getInventorySize(), (org.bukkit.entity.AbstractHorse) this.getBukkitEntity()); // CraftBukkit
       if (simplecontainer != null) {
          simplecontainer.removeListener(this);
          int i = Math.min(simplecontainer.getContainerSize(), this.inventory.getContainerSize());
@@ -327,6 +_,7 @@
 
       this.inventory.addListener(this);
       this.updateContainerEquipment();
+      this.itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this.inventory));
    }
 
    protected void updateContainerEquipment() {
@@ -374,9 +_,9 @@
    protected void playStepSound(BlockPos p_30584_, BlockState p_30585_) {
       if (!p_30585_.liquid()) {
          BlockState blockstate = this.level().getBlockState(p_30584_.above());
-         SoundType soundtype = p_30585_.getSoundType();
+         SoundType soundtype = p_30585_.getSoundType(level(), p_30584_, this);
          if (blockstate.is(Blocks.SNOW)) {
-            soundtype = blockstate.getSoundType();
+            soundtype = blockstate.getSoundType(level(), p_30584_, this);
          }
 
          if (this.isVehicle() && this.canGallop) {
@@ -412,7 +_,7 @@
    }
 
    public int getMaxTemper() {
-      return 100;
+      return this.maxDomestication; // CraftBukkit - return stored max domestication instead of 100
    }
 
    protected float getSoundVolume() {
@@ -482,6 +_,7 @@
       }
 
       if (this.getHealth() < this.getMaxHealth() && f > 0.0F) {
+         this.setRegainReason(org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); //Ketting
          this.heal(f);
          flag = true;
       }
@@ -554,6 +_,7 @@
       super.aiStep();
       if (!this.level().isClientSide && this.isAlive()) {
          if (this.random.nextInt(900) == 0 && this.deathTime == 0) {
+            this.setRegainReason(org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.REGEN); //Ketting
             this.heal(1.0F);
          }
 
@@ -786,6 +_,7 @@
       this.setDeltaMovement(vec3.x, d1, vec3.z);
       this.setIsJumping(true);
       this.hasImpulse = true;
+               net.minecraftforge.common.ForgeHooks.onLivingJump(this);
       if (p_275435_.z > 0.0D) {
          float f = Mth.sin(this.getYRot() * ((float)Math.PI / 180F));
          float f1 = Mth.cos(this.getYRot() * ((float)Math.PI / 180F));
@@ -806,7 +_,10 @@
       p_30589_.putBoolean("Tame", this.isTamed());
       if (this.getOwnerUUID() != null) {
          p_30589_.putUUID("Owner", this.getOwnerUUID());
+         p_30589_.putUUID("Owner", this.getOwnerUUID());
       }
+
+      p_30589_.putInt("Bukkit.MaxDomestication", this.maxDomestication); // CraftBukkit
 
       if (!this.inventory.getItem(0).isEmpty()) {
          p_30589_.put("SaddleItem", this.inventory.getItem(0).save(new CompoundTag()));
@@ -832,6 +_,12 @@
          this.setOwnerUUID(uuid);
       }
 
+      // CraftBukkit start
+      if (p_30565_.contains("Bukkit.MaxDomestication")) {
+         this.maxDomestication = p_30565_.getInt("Bukkit.MaxDomestication");
+      }
+      // CraftBukkit end
+
       if (p_30565_.contains("SaddleItem", 10)) {
          ItemStack itemstack = ItemStack.of(p_30565_.getCompound("SaddleItem"));
          if (itemstack.is(Items.SADDLE)) {
@@ -924,6 +_,17 @@
    }
 
    public void handleStartJump(int p_30574_) {
+      // CraftBukkit start
+      float power;
+      if (p_30574_ >= 90) {
+         power = 1.0F;
+      } else {
+         power = 0.4F + 0.4F * (float) p_30574_ / 90.0F;
+      }
+      if (!org.bukkit.craftbukkit.v1_20_R1.event.CraftEventFactory.callHorseJumpEvent(this, power)) {
+         return;
+      }
+      // CraftBukkit end
       this.allowStandSliding = true;
       this.standIfPossible();
       this.playJumpSound();
@@ -1120,6 +_,25 @@
 
       this.randomizeAttributes(p_30555_.getRandom());
       return super.finalizeSpawn(p_30555_, p_30556_, p_30557_, p_30558_, p_30559_);
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = null;
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.core.Direction facing) {
+      if (capability == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && itemHandler != null && this.isAlive())
+         return itemHandler.cast();
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      if (itemHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = itemHandler;
+         itemHandler = null;
+         oldHandler.invalidate();
+      }
    }
 
    public boolean hasInventoryChanged(Container p_149512_) {
