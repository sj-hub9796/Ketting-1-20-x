--- a/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
@@ -101,6 +_,16 @@
       }
    };
 
+   // CraftBukkit start - add fields and methods
+   public org.bukkit.potion.PotionEffect getPrimaryEffect() {
+      return (this.primaryPower != null) ? org.bukkit.craftbukkit.v1_20_R1.potion.CraftPotionUtil.toBukkit(new MobEffectInstance(this.primaryPower, getLevel(this.levels), getAmplification(levels, primaryPower, secondaryPower), true, true)) : null;
+   }
+
+   public org.bukkit.potion.PotionEffect getSecondaryEffect() {
+      return (hasSecondaryEffect(levels, primaryPower, secondaryPower)) ? org.bukkit.craftbukkit.v1_20_R1.potion.CraftPotionUtil.toBukkit(new MobEffectInstance(this.secondaryPower, getLevel(this.levels), getAmplification(levels, primaryPower, secondaryPower), true, true)) : null;
+   }
+   // CraftBukkit end
+
    public BeaconBlockEntity(BlockPos p_155088_, BlockState p_155089_) {
       super(BlockEntityType.BEACON, p_155088_, p_155089_);
    }
@@ -124,8 +_,8 @@
       for(int i1 = 0; i1 < 10 && blockpos.getY() <= l; ++i1) {
          BlockState blockstate = p_155108_.getBlockState(blockpos);
          Block block = blockstate.getBlock();
-         if (block instanceof BeaconBeamBlock) {
-            float[] afloat = ((BeaconBeamBlock)block).getColor().getTextureDiffuseColors();
+         float[] afloat = blockstate.getBeaconColorMultiplier(p_155108_, blockpos, p_155109_);
+         if (afloat != null) {
             if (p_155111_.checkingBeamSections.size() <= 1) {
                beaconblockentity$beaconbeamsection = new BeaconBlockEntity.BeaconBeamSection(afloat);
                p_155111_.checkingBeamSections.add(beaconblockentity$beaconbeamsection);
@@ -216,30 +_,82 @@
       super.setRemoved();
    }
 
+   // CraftBukkit start - split into components
+   private static byte getAmplification(int i, @Nullable MobEffect mobeffectlist, @Nullable MobEffect mobeffectlist1) {
+      {
+         byte b0 = 0;
+
+         if (i >= 4 && mobeffectlist == mobeffectlist1) {
+            b0 = 1;
+         }
+
+         return b0;
+      }
+   }
+
+   private static int getLevel(int i) {
+      {
+         int j = (9 + i * 2) * 20;
+         return j;
+      }
+   }
+
+   public static List<Player> getHumansInRange(Level world, BlockPos blockposition, int i) {
+      {
+         double d0 = (double) (i * 10 + 10);
+
+         AABB axisalignedbb = (new AABB(blockposition)).inflate(d0).expandTowards(0.0D, (double) world.getHeight(), 0.0D);
+         List<Player> list = world.getEntitiesOfClass(Player.class, axisalignedbb);
+
+         return list;
+      }
+   }
+
+   private static void applyEffect(List<Player> list, MobEffect mobeffectlist, int j, int b0) {
+      {
+         for (Player player : list) {
+            player.prepareAddEffect(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.BEACON); //Ketting
+            player.addEffect(new MobEffectInstance(mobeffectlist, j, b0, true, true));
+         }
+      }
+   }
+
+   private static boolean hasSecondaryEffect(int i, @Nullable MobEffect mobeffectlist, @Nullable MobEffect mobeffectlist1) {
+      {
+         if (i >= 4 && mobeffectlist != mobeffectlist1 && mobeffectlist1 != null) {
+            return true;
+         }
+
+         return false;
+      }
+   }
+
    private static void applyEffects(Level p_155098_, BlockPos p_155099_, int p_155100_, @Nullable MobEffect p_155101_, @Nullable MobEffect p_155102_) {
       if (!p_155098_.isClientSide && p_155101_ != null) {
-         double d0 = (double)(p_155100_ * 10 + 10);
-         int i = 0;
-         if (p_155100_ >= 4 && p_155101_ == p_155102_) {
-            i = 1;
-         }
-
-         int j = (9 + p_155100_ * 2) * 20;
-         AABB aabb = (new AABB(p_155099_)).inflate(d0).expandTowards(0.0D, (double)p_155098_.getHeight(), 0.0D);
-         List<Player> list = p_155098_.getEntitiesOfClass(Player.class, aabb);
-
-         for(Player player : list) {
-            player.addEffect(new MobEffectInstance(p_155101_, j, i, true, true));
-         }
-
-         if (p_155100_ >= 4 && p_155101_ != p_155102_ && p_155102_ != null) {
-            for(Player player1 : list) {
+         double d0 = (double) (p_155100_ * 10 + 10);
+         byte b0 = getAmplification(p_155100_, p_155101_, p_155102_);
+
+         int j = getLevel(p_155100_);
+         List<Player> list = getHumansInRange(p_155098_, p_155099_, p_155100_);
+
+         //Ketting start - revert to vanilla implementation - fixes mixin inject error
+         //applyEffect(list, p_155101_, j, b0);
+         for (Player player : list) {
+            player.prepareAddEffect(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.BEACON); //Ketting
+            player.addEffect(new MobEffectInstance(p_155101_, j, b0, true, true));
+         }
+
+         if (hasSecondaryEffect(p_155100_, p_155101_, p_155102_)) {
+            //applyEffect(list, p_155102_, j, 0);
+            for (Player player1 : list) {
+               player1.prepareAddEffect(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.BEACON); //Ketting
                player1.addEffect(new MobEffectInstance(p_155102_, j, 0, true, true));
             }
          }
-
+         //Ketting end
       }
    }
+   // CraftBukkit end
 
    public static void playSound(Level p_155104_, BlockPos p_155105_, SoundEvent p_155106_) {
       p_155104_.playSound((Player)null, p_155105_, p_155106_, SoundSource.BLOCKS, 1.0F, 1.0F);
@@ -297,7 +_,7 @@
 
    @Nullable
    public AbstractContainerMenu createMenu(int p_58696_, Inventory p_58697_, Player p_58698_) {
-      return BaseContainerBlockEntity.canUnlock(p_58698_, this.lockKey, this.getDisplayName()) ? new BeaconMenu(p_58696_, p_58697_, this.dataAccess, ContainerLevelAccess.create(this.level, this.getBlockPos())) : null;
+      return BaseContainerBlockEntity.canUnlock(p_58698_, this.lockKey, this.getDisplayName()) ? new BeaconMenu(p_58696_, p_58697_, this.dataAccess, ContainerLevelAccess.craftCreate(this.level, this.getBlockPos())) : null; //Ketting
    }
 
    public Component getDisplayName() {
