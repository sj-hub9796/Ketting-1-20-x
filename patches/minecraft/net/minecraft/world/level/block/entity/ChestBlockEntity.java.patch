--- a/net/minecraft/world/level/block/entity/ChestBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ChestBlockEntity.java
@@ -50,6 +_,36 @@
    };
    private final ChestLidController chestLidController = new ChestLidController();
 
+   // CraftBukkit start - add fields and methods
+   public java.util.List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+   private int maxStack = MAX_STACK;
+
+   public java.util.List<ItemStack> getContents() {
+      return this.items;
+   }
+
+   public void onOpen(org.bukkit.craftbukkit.v1_20_R1.entity.CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   public void onClose(org.bukkit.craftbukkit.v1_20_R1.entity.CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public int getMaxStackSize() {
+      return maxStack;
+   }
+
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+   // CraftBukkit end
+
    protected ChestBlockEntity(BlockEntityType<?> p_155327_, BlockPos p_155328_, BlockState p_155329_) {
       super(p_155327_, p_155328_, p_155329_);
    }
@@ -158,6 +_,45 @@
 
    protected AbstractContainerMenu createMenu(int p_59082_, Inventory p_59083_) {
       return ChestMenu.threeRows(p_59082_, p_59083_, this);
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<net.minecraftforge.items.IItemHandlerModifiable> chestHandler;
+   @Override
+   public void setBlockState(BlockState p_155251_) {
+      super.setBlockState(p_155251_);
+      if (this.chestHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = this.chestHandler;
+         this.chestHandler = null;
+         oldHandler.invalidate();
+      }
+   }
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, Direction side) {
+       if (cap == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && !this.remove) {
+          if (this.chestHandler == null)
+             this.chestHandler = net.minecraftforge.common.util.LazyOptional.of(this::createHandler);
+          return this.chestHandler.cast();
+       }
+       return super.getCapability(cap, side);
+   }
+
+   private net.minecraftforge.items.IItemHandlerModifiable createHandler() {
+      BlockState state = this.getBlockState();
+      if (!(state.getBlock() instanceof ChestBlock chestBlock)) {
+         return new net.minecraftforge.items.wrapper.InvWrapper(this);
+      }
+      Container inv = ChestBlock.getContainer(chestBlock, state, getLevel(), getBlockPos(), true);
+      return new net.minecraftforge.items.wrapper.InvWrapper(inv == null ? this : inv);
+   }
+
+   @Override
+   public void invalidateCaps() {
+      super.invalidateCaps();
+      if (chestHandler != null) {
+         chestHandler.invalidate();
+         chestHandler = null;
+      }
    }
 
    public void recheckOpen() {
